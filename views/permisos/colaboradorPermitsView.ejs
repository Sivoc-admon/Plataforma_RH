<%- include('../navbar.ejs') %>

    <script src="/js/permisos/colaboradorPermitsView.js" defer></script>

    <link rel="stylesheet" href="/css/permisos.css">


    <div class="inside-content-css">
        <h1> Módulo Permisos (Vista de colaborador) </h1>

        <!-- Main buttons -->
        <div class="columns" style="margin-top: 1rem;">
            <div class="column is-centered" style="text-align: center;">
                <!-- al momento de mandar el colaborador un permiso este automaticamente obtiene esttus pendietne. -->
                <button class="default-button-css functionality-button-css" onclick="createPermit()">
                    <i class="fa-solid fa-clipboard-user default-icon-button-css"></i>
                    <p>Crear Permiso</p>
                </button>
            </div>
        
            <div class="column">
                <label class="input">
                    <%= userName + " - " + userArea %>
                </label>
            </div>
        </div>
        <!-- Main buttons -->




        <!-- Esto se va a un PopUp como añadir usuario y con su respectivo PopUp de Edición.
        <div class="columns" style="margin-top: 1rem;">
            <div class="column is-centered">
                <label>Tipo de Registro</label>
                <select id="area" class="input">
                    <option value="" hidden>Seleccione tipo de Registro</option>
                    <option value="Incapacidad">Incapacidad</option>
                    <option value="Incapacidad">Permisos</option>
                </select> 
            </div>

            <div class="column is-centered">
                <label>Filtro de permiso</label>
                <select id="area" class="input">
                    <option value="" hidden>Seleccione el filtro de permiso</option>
                    <option value="Home Office">Home Office</option>
                    <option value="Cita medica">Cita medica</option>
                    <option value="Asunto Familiar">Asunto Familiar</option>
                </select> 
            </div>

            <div class="column is-centered">
                <label>Fecha de inicio</label>
                <input type="datetime-local" class="input" id="fechaYHoraInicio" required>
            </div>
             
            // format styles and user experience for calendars (fechaYHoraInicio) !!
            const todayIn = new Date();
            const formattedISODateIn = todayIn.toISOString().split('T')[0];
            const dateInputIn = document.getElementById("fechaIngreso");
            dateInputIn.value = formattedISODateIn;
            dateInputIn.addEventListener("focus", () => {
            dateInputIn.showPicker(); // Despliega el calendario nativo automáticamente
            });
            dateInputIn.addEventListener("focus", () => {
                if (!isCalendarOpen) {
                    dateInputIn.showPicker(); // Mostrar el calendario
                    isCalendarOpen = true; // Cambiar estado
                }
            });
            dateInputIn.addEventListener("click", (event) => {
                event.preventDefault(); // Previene comportamiento predeterminado
                dateInputIn.showPicker(); // Fuerza mostrar el calendario
            });
            

            <div class="column is-centered">
                <label>Fecha de termino</label>
                <input type="datetime-local" class="input" id="fechaYHoraFinal" required>
            </div>


            
            // format styles and user experience for calendars (fechaYHoraFinal) !!
            const todayOut = new Date();
            const formattedISODateOut = todayOut.toISOString().split('T')[0];
            const dateInputOut = document.getElementById("fechaBaja");
            dateInputOut.value = formattedISODateOut;
            dateInputOut.addEventListener("focus", () => {
            dateInputOut.showPicker(); // Despliega el calendario nativo automáticamente
            });
            dateInputOut.addEventListener("focus", () => {
                if (!isCalendarOpen) {
                    dateInputOut.showPicker(); // Mostrar el calendario
                    isCalendarOpen = true; // Cambiar estado
                }
            });
            dateInputOut.addEventListener("click", (event) => {
                event.preventDefault(); // Previene comportamiento predeterminado
                dateInputOut.showPicker(); // Fuerza mostrar el calendario
            });
            



            <div class="column is-centered">
                <label>Agregue documentos</label>
                <div class="file has-name is-boxed" style="flex: 1;">
                    <label class="input" style="display: flex; align-items: center; gap: 0.5rem; cursor: pointer; margin-right:0.3rem;">
                        <i class="fas fa-upload" style="margin: 0rem 0.3rem;font-size: 1.1rem;"></i>
                        <input type="file" name="documentStream" class="file-input" id="documentStream" style="display: none;">
                    </label>
                </div>
            </div>


            // ojo es example, adaptalo:
                        // Función para actualizar la vista previa de la imagen cuando se selecciona un archivo
            window.updateImagePreview = function(event) {
                const file = event.target.files[0];

                if (file) {
                    // Validar extensión del archivo
                    const validExtensions = ['image/jpeg', 'image/png'];
                    if (!validExtensions.includes(file.type)) {
                        Swal.showValidationMessage('Selecciona un archivo de imagen válido (JPEG, PNG).');
                        event.target.value = ''; // Limpia el input de archivo
                        return;
                    }

                    // Validar tamaño del archivo (límite: 2 MB)
                    const maxSize = 2 * 1024 * 1024; // 2 MB
                    if (file.size > maxSize) {
                        Swal.showValidationMessage('El tamaño máximo permitido es de 2 MB.');
                        event.target.value = ''; // Limpia el input de archivo
                        return;
                    }

                    // Leer y mostrar la vista previa de la imagen si todo es válido
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        // Actualiza la fuente de la imagen en la vista previa
                        document.getElementById('profile-img').src = e.target.result;
                    };
                    reader.readAsDataURL(file); // Lee el archivo como una URL de datos
                }
            };
            
            



             Ojo, aqui es DEJARLO COMO ESTÁ libre de edición hasta que se de click en confirmar. 


             
        </div>
-->


        <div class="field">
            <div class="control">
                <input class="input" type="text" id="searchInput" placeholder="Buscar por nombre, apellido o área" onkeyup="filterTable()">
            </div>
        </div>

        <table class="table is-fullwidth is-hoverable">
            <thead>
                <tr style="background: linear-gradient(135deg, var(--dark-green), var(--light-blue));">
                    <th class="has-text-centered">Tipo permiso</th>
                    <th class="has-text-centered">Fecha inicio</th>
                    <th class="has-text-centered">Fecha termino</th>
                    <th class="has-text-centered">Consultar docs</th>
                    <th class="has-text-centered">Estado</th>
                </tr>
            </thead>

            <% if (permitsRows.length !== 0) { %>
                <tbody id="tableBody"> 
                    <% permitsRows.forEach(permit=> { %>
                        <tr>
                            <td class="is-centered">
                                <%= permit.tipoPermiso %>
                            </td>
                            <td class="is-centered">
                                <%= permit.fechaInicio %>
                            </td>
                            <td class="is-centered">
                                <%= permit.fechaTermino %>
                            </td>
                            <td class="is-centered">

                                <% if (!permit.docPaths || permit.docPaths.length === 0) { %>
                                    No hay documentos
                                <% } else { %>
                                    <ul>
                                        <% permit.docPaths.forEach(function(docPath) { %>
                                            <li><%= docPath %></li>
                                        <% }); %>
                                    </ul>
                                <% } %>
                            </td>

                            <td class="is-centered">
                            <% if (permit.isVerified) { %>
                                <% } if (permit.estatus === "Aprobado") { %>
                                        <i class="fa-solid fa-thumbs-up status-css" style="justify-self: center; margin-right: 0.5rem;"></i> Aprobado
                                <% } else if (permit.estatus === "Cancelado") { %>
                                        <i class="fa-solid fa-thumbs-down status-css" style="justify-self: center; margin-right: 0.5rem;"></i> Cancelado
                                <% } else if (permit.estatus === "Justificado") { %>
                                        <i class="fa-solid fa-thumbs-up status-css" style="justify-self: center; margin-right: 0.5rem;"></i> Justificado
                                <% } else if (permit.estatus === "Injustificado") { %>
                                        <i class="fa-solid fa-thumbs-down status-css" style="justify-self: center; margin-right: 0.5rem;"></i> Injustificado
                                <% } else { %>
                                    <%= permit.estatus %>
                                <% } %>

                            <% } else if (!permit.isSent) { %>
                                    <div class="columns is-centered">
                                        <div class="column is-narrow">
                                            <button class="default-button-css table-button-css" userId="<%= permit._id %>" onclick="editPermit(this)" >
                                                <i class="fa-solid fa-pencil"></i>
                                            </button>
                                        </div>

                                        <div class="column is-narrow">
                                            <button class="default-button-css table-button-css" userId="<%= permit._id %>" onclick="deletePermit(this)">
                                                <i class="fa-solid fa-trash-can"></i>
                                            </button>
                                        </div>

                                        <div class="column is-narrow">
                                            <button class="default-button-css table-button-css" userId="<%= permit._id %>" onclick="sendPermit(this)">
                                                <i class="fa-solid fa-paper-plane"></i>
                                            </button>
                                        </div>
                                    </div>
                            <% } else if (permit.isSent) { %>
                                <i class="fa-solid fa-clock status-css" style="justify-self: center; margin-right: 0.5rem;"></i> Pendiente
                            <% } else { %>
                                <%= permit.sent %>
                            <% } %>
                            </td>
                        </tr>
                    <% ); %>
            </tbody>
        </table>
        <% } else { %>
            <h2 style="font-size:2.61rem; display: block; padding: 0.6rem; margin-bottom:1.5rem;">No existen permisos a la fecha.</h2>
        <% }; %>
        <div class="pagination" >
            <button class="default-button-css" onclick="prevPage()">Anterior</button>
            <button class="default-button-css" onclick="nextPage()">Siguiente</button>
        </div>


    </div>